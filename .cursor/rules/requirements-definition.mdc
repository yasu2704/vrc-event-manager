---
description: 
globs: 
alwaysApply: true
---
# VRChatイベント管理システム要件定義書

## 1. システム概要

### 1.1 目的
VRChatで開催されるイベントを効率的に管理し、イベント主催者と出演者間の情報共有をスムーズに行うためのWebアプリケーションを開発する。

### 1.2 対象ユーザー
- イベント主催者：イベントの企画・運営を行うユーザー
- 出演者：イベントに参加・出演するユーザー

### 1.3 システム規模
- 初期想定ユーザー数：主催者5～10人、出演者は各イベント3～6人程度
- イベント頻度：主催者1人あたり月最大4回
- 段階的にユーザー数を拡大予定

## 2. 機能要件

### 2.1 共通機能
#### 2.1.1 ユーザー管理
- Googleアカウントを利用したSSO（シングルサインオン）認証
- VRChatユーザーIDの手動登録機能
- ユーザー権限管理（主催者/出演者）

### 2.2 イベント主催者向け機能
#### 2.2.1 イベント管理
- イベントの作成・編集機能
  - イベント名
  - 開催日時
  - インスタンス種別（Group、Group+、フレンド、フレンド+）
  - Join方法（Group参加必須、出演者へのJoin、インスタンスにいるフレンドへのJoin）
  - イベントテーマ（オールジャンル、ジャンル固定、テーマ等自由入力）
  - 出演者リスト

#### 2.2.2 出演者管理
- 出演者の追加・削除
- 出演者への権限付与

#### 2.2.3 スケジュール管理
- イベントスケジュールの設定
- タイムテーブル管理

### 2.3 出演者向け機能
#### 2.3.1 イベント閲覧
- 登録されているイベント一覧表示
- イベント詳細情報の閲覧

### 2.4 外部連携機能
- Googleカレンダーへのイベント登録機能

## 3. 非機能要件

### 3.1 パフォーマンス要件
- 画面表示速度
  - 初期表示時間: 3秒以内
  - Time to Interactive: 4秒以内
  - First Contentful Paint: 2秒以内
- レスポンス時間
  - APIレスポンス: 500ms以内
  - ページ遷移: 1秒以内
- 同時接続ユーザー数：最大100人程度

### 3.2 レンダリング要件
- ページ種別ごとの最適なレンダリング方式採用
  - イベント一覧: ISR（定期的な更新）
  - イベント詳細: SSR + CSR（SEO対応と動的更新）
  - カレンダー表示: CSR（インタラクティブ操作）
  - ユーザープロフィール: SSR（セキュリティ）

### 3.3 セキュリティ要件
- 認証・認可
  - Google SSOによる安全なログイン
  - セッション管理
  - CSRF対策
- データ保護
  - ユーザー情報の暗号化
  - APIアクセス制御
  - XSS対策

### 3.4 可用性要件
- サービス稼働率: 99.9%
- バックアップ
  - データベースの定期バックアップ
  - 障害時の復旧手順確立
- エラー処理
  - ユーザーフレンドリーなエラー表示
  - エラーログの収集と分析
  - 適切なフォールバックUI

### 3.5 保守性要件
- コード品質
  - TypeScriptによる型安全性
  - テストカバレッジ基準の設定
  - コードレビュー基準の確立
- モニタリング
  - パフォーマンスメトリクスの収集
  - エラー監視
  - ユーザー行動分析

### 3.6 対応環境
- 対応デバイス：PC、スマートフォン、タブレット
- レスポンシブデザイン

### 3.7 言語対応
- 日本語のみ（将来的に英語対応の可能性あり）

### 3.8 デザイン要件
- シンプルで使いやすいインターフェース
- レスポンシブ対応

### 3.9 拡張性要件
- スケーラビリティ
  - ユーザー数増加への対応
  - データ量増加への対応
- 機能拡張
  - タイムラインビュー実装の考慮
    - 参考: https://vrc.tl/
    - 横軸が日時のタイムライン表示
    - イベントおよびタイムテーブルの視覚的表示
    - 特定時間の出演者確認機能
    - 一般閲覧可能な公開機能
  - 多言語対応の考慮
  - 外部サービス連携の拡張性

## 4. システム構成

### 4.1 開発環境
- 言語：TypeScript
- フレームワーク：Next.js、Hono
- データベース：Supabase、Cloudflare D1、Cloudflare KV
- ホスティング環境：Cloudflare Pages、Cloudflare Workers
- 認証：Google SSO

### 4.2 データベース構成
- ユーザー情報（Googleアカウント情報、VRChatユーザーID）
- イベント情報
- 出演者情報
- スケジュール情報

## 5. 開発・運用計画

### 5.1 開発体制
- 個人開発
- スキマ時間での開発

### 5.2 開発スケジュール
- 開発期間：無期限
- MVP（最小実用製品）リリース後、追加機能を段階的に実装

### 5.3 テスト計画
- 開発者テスト：基本機能の動作確認
- 受け入れ基準：開発者の満足度

### 5.4 運用・保守
- 運用体制：個人対応
- モニタリング：Cloudflare、Google アナリティクス
- 初期段階ではDBを直接確認、将来的には管理機能実装を検討

### 5.5 バックアップ計画
- 要検討

## 6. 将来拡張計画

### 6.1 追加機能候補
- 英語対応
- タイムラインビュー
- 運用状況の可視化ダッシュボード
- コミュニケーション機能